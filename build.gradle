plugins {
    id "org.jetbrains.kotlin.jvm" version "1.8.22"
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'

    repositories {
        mavenCentral()
    }
}

group = 'org.jetbrains.teamcity'
if (hasProperty("forcedVersion")) {
    version = forcedVersion
} else if(System.getenv("BUILD_COUNTER") != null) {
    version = "$projectVersion.${System.getenv("BUILD_COUNTER")}-SNAPSHOT"
} else {
    version = "$projectVersion.9999-SNAPSHOT"
}
println "##teamcity[buildNumber '$version']"


configure(project(':teamcity-rest-client-api')) {
    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1"
    }
}

configure(project(":teamcity-rest-client-impl")) {
    dependencies {
        implementation "com.squareup.retrofit2:retrofit:2.11.0"
        implementation "com.squareup.retrofit2:converter-gson:2.11.0"
        implementation "com.squareup.okhttp3:okhttp:4.12.0"
        implementation "com.squareup.okhttp3:logging-interceptor:4.12.0"
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1"

        implementation "org.slf4j:slf4j-api:2.0.16"
        testImplementation "org.slf4j:slf4j-log4j12:2.0.16"

        testImplementation "junit:junit:4.12"
        testImplementation "org.assertj:assertj-core:3.12.2"
        testImplementation "org.jetbrains.kotlin:kotlin-test"
        testImplementation "org.jetbrains.kotlin:kotlin-reflect"

        implementation project(':teamcity-rest-client-api')
    }
}

dependencies {
    implementation project(':teamcity-rest-client-api')
    implementation project(':teamcity-rest-client-impl')
}

apply plugin: "maven-publish"

task sourceJar(type: Jar) {
    subprojects {
        from sourceSets.main.kotlin
    }
}
task mainJar(type: Jar) {
    subprojects {
        dependsOn it.classes
    }
    subprojects {
        from it.sourceSets.main.output
    }
}
artifacts {
    archives sourceJar, mainJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact mainJar
            artifact sourceJar {
                classifier "sources"
            }

            //the standard components.java doesn't work for multiple artifacts so we need to define dependencies manually
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                rootProject.subprojects { project ->
                  project.configurations.implementation.allDependencies.each {
                      if (!it.name.startsWith("teamcity-rest-client")) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode("groupId", it.group)
                        dependencyNode.appendNode("artifactId", it.name)
                        dependencyNode.appendNode("version", it.version)
                      }
                  }
                }
            }
            repositories {
                maven {
                    url "https://packages.jetbrains.team/maven/p/teamcity-rest-client/teamcity-rest-client"
                    credentials {
                        username = System.getenv("SPACE_USER")
                        password = System.getenv("SPACE_KEY")
                    }
                }
            }
        }
    }
}

subprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions { jvmTarget = '1.8' }
    }

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

wrapper {
  gradleVersion = '7.6.1'
  distributionUrl = "https://cache-redirector.jetbrains.com/services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
