plugins {
    id "com.jfrog.bintray" version "1.8.4"
    id "org.jetbrains.kotlin.jvm" version "1.3.61"
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'

    repositories {
        mavenCentral()
    }
}

configure(project(':teamcity-rest-client-api')) {
    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib"
    }
}

configure(project(':teamcity-rest-client-impl')) {
    dependencies {
        compile "commons-codec:commons-codec:1.10"
        compile 'com.squareup.retrofit:retrofit:1.9.0'
        compile "com.squareup.okhttp3:okhttp:4.3.1"
        compile 'com.jakewharton.retrofit:retrofit1-okhttp3-client:1.1.0'
        compile "org.jetbrains.kotlin:kotlin-stdlib"

        compile 'org.slf4j:slf4j-api:1.7.12'

        testCompile 'junit:junit:4.12'
        testCompile 'org.assertj:assertj-core:3.12.2'
        testCompile 'org.slf4j:slf4j-log4j12:1.7.12'
        testCompile "org.jetbrains.kotlin:kotlin-test"
        testCompile "org.jetbrains.kotlin:kotlin-reflect"

        compile project(':teamcity-rest-client-api')
    }
}

dependencies {
    compile project(':teamcity-rest-client-api')
    compile project(':teamcity-rest-client-impl')
}

group = 'org.jetbrains.teamcity'
if (hasProperty("buildNumber")) {
    version buildNumber
    println "##teamcity[buildNumber '$version']"
} else if (hasProperty("buildCounter")) {
    version projectVersion + "." + buildCounter
    println "##teamcity[buildNumber '$version']"
} else {
    version projectVersion + '.9999-SNAPSHOT'
}

apply plugin: 'maven-publish'

task sourceJar(type: Jar) {
    subprojects {
        from sourceSets.main.kotlin
    }
}
task mainJar(type: Jar) {
    subprojects {
        dependsOn it.classes
    }
    subprojects {
        from it.sourceSets.main.output
    }
}
artifacts {
    archives sourceJar, mainJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact mainJar
            artifact sourceJar {
                classifier "sources"
            }

            //the standard components.java doesn't work for multiple artifacts so we need to define dependencies manually
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                rootProject.subprojects { project ->
                  project.configurations.compile.allDependencies.each {
                      if (!it.name.startsWith("teamcity-rest-client")) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                      }
                  }
                }
            }
        }
    }
}
if (hasProperty("bintrayUser")) {
    bintray {
        user = bintrayUser
        key = bintrayApiKey
        publish = true
        publications = ['mavenJava']
        pkg {
            userOrg = 'jetbrains'
            repo = "teamcity-rest-client"
            name = "teamcity-rest-client"
            version {
                name = project.version
            }
        }
    }
}

wrapper {
  gradleVersion = '6.1.1'
  distributionUrl = "https://cache-redirector.jetbrains.com/services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
